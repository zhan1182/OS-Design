; Compiled by GCC
.text
	.align 2
.proc _isspace
.global _isspace
_isspace:
;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#24	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	lb	r2,3(r30)
	addi	r1,r0,#0
	andi	r3,r2,#0x00ff
	seqi	r4,r3,#32
	bnez	r4,L3
	nop	; delay slot nop
	andi	r3,r2,#0x00ff
	seqi	r4,r3,#9
	bnez	r4,L3
	nop	; delay slot nop
	andi	r3,r2,#0x00ff
	seqi	r4,r3,#10
	bnez	r4,L3
	nop	; delay slot nop
	j	L2
	nop	; delay slot nop
L3:
	addi	r1,r0,#1
L2:
	j	L1
	nop	; delay slot nop
L1:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _isspace
	.align 2
.proc _isxdigit
.global _isxdigit
_isxdigit:
;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#24	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	lb	r2,3(r30)
	addi	r1,r0,#0
	andi	r3,r2,#0x00ff
	sgtui	r4,r3,#47
	beqz	r4,L7
	nop	; delay slot nop
	andi	r3,r2,#0x00ff
	sleui	r4,r3,#57
	bnez	r4,L6
	nop	; delay slot nop
	j	L7
	nop	; delay slot nop
L7:
	andi	r3,r2,#0x00ff
	sgtui	r4,r3,#96
	beqz	r4,L8
	nop	; delay slot nop
	andi	r3,r2,#0x00ff
	sleui	r4,r3,#102
	bnez	r4,L6
	nop	; delay slot nop
	j	L8
	nop	; delay slot nop
L8:
	andi	r3,r2,#0x00ff
	sgtui	r4,r3,#64
	beqz	r4,L5
	nop	; delay slot nop
	andi	r3,r2,#0x00ff
	sleui	r4,r3,#65
	bnez	r4,L6
	nop	; delay slot nop
	j	L5
	nop	; delay slot nop
L6:
	addi	r1,r0,#1
L5:
	j	L4
	nop	; delay slot nop
L4:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _isxdigit
	.align 2
.proc _DisableIntrs
.global _DisableIntrs
_DisableIntrs:
;  Function 'DisableIntrs'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#16	; alloc local storage
	sw	0(r29),r2
	addi	r29,r29,#-8
	add	r1,r0,r29
	addi	r2,r0,#15
	sw	(r1),r2
	jal	_SetIntrs
	nop	; delay slot nop
	addi	r29,r29,#8
	add	r2,r0,r1
	add	r1,r0,r2
	j	L9
	nop	; delay slot nop
L9:
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _DisableIntrs
	.align 2
.proc _EnableIntrs
.global _EnableIntrs
_EnableIntrs:
;  Function 'EnableIntrs'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#16	; alloc local storage
	sw	0(r29),r2
	addi	r29,r29,#-8
	add	r1,r0,r29
	addi	r2,r0,#0
	sw	(r1),r2
	jal	_SetIntrs
	nop	; delay slot nop
	addi	r29,r29,#8
	add	r2,r0,r1
	add	r1,r0,r2
	j	L10
	nop	; delay slot nop
L10:
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _EnableIntrs
	.align 2
.proc _RestoreIntrs
.global _RestoreIntrs
_RestoreIntrs:
;  Function 'RestoreIntrs'; 0 bytes of locals, 2 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#16	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	lw	r2,(r30)
	addi	r29,r29,#-8
	add	r1,r0,r29
	sw	(r1),r2
	jal	_SetIntrs
	nop	; delay slot nop
	addi	r29,r29,#8
	add	r3,r0,r1
	add	r1,r0,r3
	j	L11
	nop	; delay slot nop
L11:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _RestoreIntrs
.data
	.align 2
LC0:
	.ascii "SynchModuleInit: Entering SynchModuleInit\n\000"
	.align 2
LC1:
	.ascii "SynchModuleInit: Leaving SynchModuleInit\n\000"
.text
	.align 2
.proc _SynchModuleInit
.global _SynchModuleInit
_SynchModuleInit:
;  Function 'SynchModuleInit'; 8 bytes of locals, 3 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#32	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r1),r2
	addi	r2,r0,#112
	sw	4(r1),r2
	jal	_dindex
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#0
	beqz	r2,L13
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC0)>>16)&0xffff
	addui	r2,r2,(LC0)&0xffff
	sw	(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
L13:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r1),r2
	addi	r2,r0,#43
	sw	4(r1),r2
	jal	_dindex
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#0
	beqz	r2,L14
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC0)>>16)&0xffff
	addui	r2,r2,(LC0)&0xffff
	sw	(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
L14:
	nop
	addi	r1,r0,#0
	sw	-12(r30),r1
L15:
	lw	r1,-12(r30)
	slei	r2,r1,#31
	bnez	r2,L18
	nop	; delay slot nop
	j	L16
	nop	; delay slot nop
L18:
	lhi	r1,((_sems)>>16)&0xffff
	addui	r1,r1,(_sems)&0xffff
	lw	r2,-12(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r2,r3,#0x2
	add	r1,r1,r2
	addi	r2,r0,#0
	sw	16(r1),r2
L17:
	lw	r2,-12(r30)
	addi	r1,r2,#1
	add	r2,r0,r1
	sw	-12(r30),r2
	j	L15
	nop	; delay slot nop
L16:
	nop
	addi	r1,r0,#0
	sw	-12(r30),r1
L19:
	lw	r1,-12(r30)
	slei	r2,r1,#63
	bnez	r2,L22
	nop	; delay slot nop
	j	L20
	nop	; delay slot nop
L22:
	lhi	r1,((_locks)>>16)&0xffff
	addui	r1,r1,(_locks)&0xffff
	lw	r2,-12(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r2,r3,#0x2
	add	r1,r1,r2
	addi	r2,r0,#0
	sw	16(r1),r2
	lhi	r1,((_locks)>>16)&0xffff
	addui	r1,r1,(_locks)&0xffff
	lw	r2,-12(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r2,r3,#0x2
	add	r1,r1,r2
	addi	r2,r0,#0
	sw	(r1),r2
L21:
	lw	r2,-12(r30)
	addi	r1,r2,#1
	add	r2,r0,r1
	sw	-12(r30),r2
	j	L19
	nop	; delay slot nop
L20:
	nop
	addi	r1,r0,#0
	sw	-12(r30),r1
L23:
	lw	r1,-12(r30)
	slei	r2,r1,#31
	bnez	r2,L26
	nop	; delay slot nop
	j	L24
	nop	; delay slot nop
L26:
	lhi	r1,((_conds)>>16)&0xffff
	addui	r1,r1,(_conds)&0xffff
	lw	r2,-12(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r2,r3,#0x2
	add	r1,r1,r2
	addi	r2,r0,#0
	sw	16(r1),r2
L25:
	lw	r2,-12(r30)
	addi	r1,r2,#1
	add	r2,r0,r1
	sw	-12(r30),r2
	j	L23
	nop	; delay slot nop
L24:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r1),r2
	addi	r2,r0,#112
	sw	4(r1),r2
	jal	_dindex
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#0
	beqz	r2,L27
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC1)>>16)&0xffff
	addui	r2,r2,(LC1)&0xffff
	sw	(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
L27:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r1),r2
	addi	r2,r0,#43
	sw	4(r1),r2
	jal	_dindex
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#0
	beqz	r2,L28
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC1)>>16)&0xffff
	addui	r2,r2,(LC1)&0xffff
	sw	(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
L28:
	addi	r1,r0,#1
	j	L12
	nop	; delay slot nop
L12:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _SynchModuleInit
.data
	.align 2
LC2:
	.ascii "FATAL ERROR: could not initialize semaphore waiting queue in SemInit!\n"
	.ascii "\000"
.text
	.align 2
.proc _SemInit
.global _SemInit
_SemInit:
;  Function 'SemInit'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#16	; alloc local storage
	sw	0(r29),r2
	lw	r1,(r30)
	snei	r2,r1,#0
	bnez	r2,L30
	nop	; delay slot nop
	addi	r1,r0,#-1
	j	L29
	nop	; delay slot nop
L30:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,(r30)
	sw	(r1),r2
	jal	_AQueueInit
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#1
	beqz	r2,L31
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC2)>>16)&0xffff
	addui	r2,r2,(LC2)&0xffff
	sw	(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
	add	r2,r0,r29
	jal	_exitsim
	nop	; delay slot nop
L31:
	lw	r1,(r30)
	lw	r2,4(r30)
	sw	12(r1),r2
	addi	r1,r0,#1
	j	L29
	nop	; delay slot nop
L29:
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _SemInit
	.align 2
.proc _SemCreate
.global _SemCreate
_SemCreate:
;  Function 'SemCreate'; 8 bytes of locals, 4 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#32	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	add	r2,r0,r29
	jal	_DisableIntrs
	nop	; delay slot nop
	sw	-16(r30),r1
	addi	r1,r0,#0
	sw	-12(r30),r1
L33:
	lw	r1,-12(r30)
	slei	r2,r1,#31
	bnez	r2,L36
	nop	; delay slot nop
	j	L34
	nop	; delay slot nop
L36:
	lw	r1,-12(r30)
	add	r3,r0,r1
	slli	r2,r3,#0x2
	add	r2,r2,r1
	slli	r1,r2,#0x2
	lhi	r5,((_sems)>>16)&0xffff
	addui	r5,r5,(_sems)&0xffff
	add	r2,r1,r5
	lw	r1,16(r2)
	snei	r2,r1,#0
	bnez	r2,L35
	nop	; delay slot nop
	lhi	r1,((_sems)>>16)&0xffff
	addui	r1,r1,(_sems)&0xffff
	lw	r2,-12(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r2,r3,#0x2
	add	r1,r1,r2
	addi	r2,r0,#1
	sw	16(r1),r2
	j	L34
	nop	; delay slot nop
L37:
L35:
	lw	r2,-12(r30)
	addi	r1,r2,#1
	add	r2,r0,r1
	sw	-12(r30),r2
	j	L33
	nop	; delay slot nop
L34:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-16(r30)
	sw	(r1),r2
	jal	_RestoreIntrs
	nop	; delay slot nop
	addi	r29,r29,#8
	lw	r1,-12(r30)
	seqi	r2,r1,#32
	beqz	r2,L38
	nop	; delay slot nop
	addi	r1,r0,#-1
	j	L32
	nop	; delay slot nop
L38:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-12(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r2,r3,#0x2
	lhi	r3,((_sems)>>16)&0xffff
	addui	r3,r3,(_sems)&0xffff
	add	r2,r3,r2
	sw	(r1),r2
	lw	r2,(r30)
	sw	4(r1),r2
	jal	_SemInit
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#1
	beqz	r2,L39
	nop	; delay slot nop
	addi	r1,r0,#-1
	j	L32
	nop	; delay slot nop
L39:
	lw	r1,-12(r30)
	j	L32
	nop	; delay slot nop
L32:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _SemCreate
.data
	.align 2
LC3:
	.ascii "SemWait: Old interrupt value was 0x%x.\n\000"
	.align 2
LC4:
	.ascii "SemWait: Proc %d waiting on sem %d, count=%d.\n\000"
	.align 2
LC5:
	.ascii "SemWait: putting process %d to sleep\n\000"
	.align 2
LC6:
	.ascii "FATAL ERROR: could not allocate link for semaphore queue in SemWait!\n"
	.ascii "\000"
	.align 2
LC7:
	.ascii "FATAL ERROR: could not insert new link into semaphore waiting queue in"
	.ascii " SemWait!\n\000"
	.align 2
LC8:
	.ascii "SemWait: Proc %d granted permission to continue by sem %d\n\000"
.text
	.align 2
.proc _SemWait
.global _SemWait
_SemWait:
;  Function 'SemWait'; 8 bytes of locals, 3 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#32	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	lw	r1,(r30)
	snei	r2,r1,#0
	bnez	r2,L41
	nop	; delay slot nop
	addi	r1,r0,#-1
	j	L40
	nop	; delay slot nop
L41:
	add	r2,r0,r29
	jal	_DisableIntrs
	nop	; delay slot nop
	sw	-16(r30),r1
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r1),r2
	addi	r2,r0,#73
	sw	4(r1),r2
	jal	_dindex
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#0
	beqz	r2,L42
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC3)>>16)&0xffff
	addui	r2,r2,(LC3)&0xffff
	sw	(r1),r2
	lw	r2,-16(r30)
	sw	4(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
L42:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r1),r2
	addi	r2,r0,#43
	sw	4(r1),r2
	jal	_dindex
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#0
	beqz	r2,L43
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC3)>>16)&0xffff
	addui	r2,r2,(LC3)&0xffff
	sw	(r1),r2
	lw	r2,-16(r30)
	sw	4(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
L43:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r1),r2
	addi	r2,r0,#115
	sw	4(r1),r2
	jal	_dindex
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#0
	beqz	r2,L44
	nop	; delay slot nop
	add	r2,r0,r29
	jal	_GetCurrentPid
	nop	; delay slot nop
	add	r2,r0,r1
	addi	r29,r29,#-16
	add	r1,r0,r29
	lhi	r3,((LC4)>>16)&0xffff
	addui	r3,r3,(LC4)&0xffff
	sw	(r1),r3
	sw	4(r1),r2
	lw	r3,(r30)
	lhi	r4,((_sems)>>16)&0xffff
	addui	r4,r4,(_sems)&0xffff
	sub	r2,r3,r4
	lhi	r3,#-13108
	addui	r3,r3,#52429
	movi2fp	f0,r2
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	srai	r3,r2,#0x2
	sw	8(r1),r3
	lw	r2,(r30)
	lw	r3,12(r2)
	sw	12(r1),r3
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#16
L44:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r1),r2
	addi	r2,r0,#43
	sw	4(r1),r2
	jal	_dindex
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#0
	beqz	r2,L45
	nop	; delay slot nop
	add	r2,r0,r29
	jal	_GetCurrentPid
	nop	; delay slot nop
	add	r2,r0,r1
	addi	r29,r29,#-16
	add	r1,r0,r29
	lhi	r3,((LC4)>>16)&0xffff
	addui	r3,r3,(LC4)&0xffff
	sw	(r1),r3
	sw	4(r1),r2
	lw	r3,(r30)
	lhi	r4,((_sems)>>16)&0xffff
	addui	r4,r4,(_sems)&0xffff
	sub	r2,r3,r4
	lhi	r3,#-13108
	addui	r3,r3,#52429
	movi2fp	f0,r2
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	srai	r3,r2,#0x2
	sw	8(r1),r3
	lw	r2,(r30)
	lw	r3,12(r2)
	sw	12(r1),r3
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#16
L45:
	lw	r1,(r30)
	lw	r2,12(r1)
	slei	r1,r2,#0
	beqz	r1,L46
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r1),r2
	addi	r2,r0,#115
	sw	4(r1),r2
	jal	_dindex
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#0
	beqz	r2,L47
	nop	; delay slot nop
	add	r2,r0,r29
	jal	_GetCurrentPid
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r2,r0,r29
	lhi	r3,((LC5)>>16)&0xffff
	addui	r3,r3,(LC5)&0xffff
	sw	(r2),r3
	sw	4(r2),r1
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
L47:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r1),r2
	addi	r2,r0,#43
	sw	4(r1),r2
	jal	_dindex
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#0
	beqz	r2,L48
	nop	; delay slot nop
	add	r2,r0,r29
	jal	_GetCurrentPid
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r2,r0,r29
	lhi	r3,((LC5)>>16)&0xffff
	addui	r3,r3,(LC5)&0xffff
	sw	(r2),r3
	sw	4(r2),r1
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
L48:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((_currentPCB)>>16)&0xffff
	addui	r2,r2,(_currentPCB)&0xffff
	lw	r3,(r2)
	sw	(r1),r3
	jal	_AQueueAllocLink
	nop	; delay slot nop
	addi	r29,r29,#8
	sw	-12(r30),r1
	lw	r1,-12(r30)
	snei	r2,r1,#0
	bnez	r2,L49
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC6)>>16)&0xffff
	addui	r2,r2,(LC6)&0xffff
	sw	(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
	add	r2,r0,r29
	jal	_exitsim
	nop	; delay slot nop
L49:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,(r30)
	sw	(r1),r2
	lw	r2,-12(r30)
	sw	4(r1),r2
	jal	_AQueueInsertLast
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#1
	beqz	r2,L50
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC7)>>16)&0xffff
	addui	r2,r2,(LC7)&0xffff
	sw	(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
	add	r2,r0,r29
	jal	_exitsim
	nop	; delay slot nop
L50:
	add	r2,r0,r29
	jal	_ProcessSleep
	nop	; delay slot nop
	j	L51
	nop	; delay slot nop
L46:
	lw	r2,(r30)
	lw	r1,(r30)
	lw	r2,(r30)
	lw	r3,12(r2)
	addi	r2,r3,#-1
	add	r3,r0,r2
	sw	12(r1),r3
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r1),r2
	addi	r2,r0,#115
	sw	4(r1),r2
	jal	_dindex
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#0
	beqz	r2,L52
	nop	; delay slot nop
	add	r2,r0,r29
	jal	_GetCurrentPid
	nop	; delay slot nop
	add	r2,r0,r1
	addi	r29,r29,#-16
	add	r1,r0,r29
	lhi	r3,((LC8)>>16)&0xffff
	addui	r3,r3,(LC8)&0xffff
	sw	(r1),r3
	sw	4(r1),r2
	lw	r3,(r30)
	lhi	r4,((_sems)>>16)&0xffff
	addui	r4,r4,(_sems)&0xffff
	sub	r2,r3,r4
	lhi	r3,#-13108
	addui	r3,r3,#52429
	movi2fp	f0,r2
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	srai	r3,r2,#0x2
	sw	8(r1),r3
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#16
L52:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r1),r2
	addi	r2,r0,#43
	sw	4(r1),r2
	jal	_dindex
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#0
	beqz	r2,L51
	nop	; delay slot nop
	add	r2,r0,r29
	jal	_GetCurrentPid
	nop	; delay slot nop
	add	r2,r0,r1
	addi	r29,r29,#-16
	add	r1,r0,r29
	lhi	r3,((LC8)>>16)&0xffff
	addui	r3,r3,(LC8)&0xffff
	sw	(r1),r3
	sw	4(r1),r2
	lw	r3,(r30)
	lhi	r4,((_sems)>>16)&0xffff
	addui	r4,r4,(_sems)&0xffff
	sub	r2,r3,r4
	lhi	r3,#-13108
	addui	r3,r3,#52429
	movi2fp	f0,r2
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	srai	r3,r2,#0x2
	sw	8(r1),r3
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#16
L53:
L51:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-16(r30)
	sw	(r1),r2
	jal	_RestoreIntrs
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r1,r0,#1
	j	L40
	nop	; delay slot nop
L40:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _SemWait
	.align 2
.proc _SemHandleWait
.global _SemHandleWait
_SemHandleWait:
;  Function 'SemHandleWait'; 0 bytes of locals, 4 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#24	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	lw	r1,(r30)
	slti	r2,r1,#0
	beqz	r2,L55
	nop	; delay slot nop
	addi	r1,r0,#-1
	j	L54
	nop	; delay slot nop
L55:
	lw	r1,(r30)
	sgti	r2,r1,#31
	beqz	r2,L56
	nop	; delay slot nop
	addi	r1,r0,#-1
	j	L54
	nop	; delay slot nop
L56:
	lw	r1,(r30)
	add	r3,r0,r1
	slli	r2,r3,#0x2
	add	r2,r2,r1
	slli	r1,r2,#0x2
	lhi	r5,((_sems)>>16)&0xffff
	addui	r5,r5,(_sems)&0xffff
	add	r2,r1,r5
	lw	r1,16(r2)
	snei	r2,r1,#0
	bnez	r2,L57
	nop	; delay slot nop
	addi	r1,r0,#-1
	j	L54
	nop	; delay slot nop
L57:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r2,r3,#0x2
	lhi	r3,((_sems)>>16)&0xffff
	addui	r3,r3,(_sems)&0xffff
	add	r2,r3,r2
	sw	(r1),r2
	jal	_SemWait
	nop	; delay slot nop
	addi	r29,r29,#8
	add	r2,r0,r1
	add	r1,r0,r2
	j	L54
	nop	; delay slot nop
L54:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _SemHandleWait
.data
	.align 2
LC9:
	.ascii "SemSignal: Process %d Signalling on sem %d, count=%d.\n\000"
	.align 2
LC10:
	.ascii "FATAL ERROR: could not remove link from semaphore queue in SemSignal!\n"
	.ascii "\000"
	.align 2
LC11:
	.ascii "SemSignal: Waking up PID %d.\n\000"
.text
	.align 2
.proc _SemSignal
.global _SemSignal
_SemSignal:
;  Function 'SemSignal'; 16 bytes of locals, 3 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#40	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	lw	r1,(r30)
	snei	r2,r1,#0
	bnez	r2,L59
	nop	; delay slot nop
	addi	r1,r0,#-1
	j	L58
	nop	; delay slot nop
L59:
	add	r2,r0,r29
	jal	_DisableIntrs
	nop	; delay slot nop
	sw	-16(r30),r1
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r1),r2
	addi	r2,r0,#115
	sw	4(r1),r2
	jal	_dindex
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#0
	beqz	r2,L60
	nop	; delay slot nop
	add	r2,r0,r29
	jal	_GetCurrentPid
	nop	; delay slot nop
	add	r2,r0,r1
	addi	r29,r29,#-16
	add	r1,r0,r29
	lhi	r3,((LC9)>>16)&0xffff
	addui	r3,r3,(LC9)&0xffff
	sw	(r1),r3
	sw	4(r1),r2
	lw	r3,(r30)
	lhi	r4,((_sems)>>16)&0xffff
	addui	r4,r4,(_sems)&0xffff
	sub	r2,r3,r4
	lhi	r3,#-13108
	addui	r3,r3,#52429
	movi2fp	f0,r2
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	srai	r3,r2,#0x2
	sw	8(r1),r3
	lw	r2,(r30)
	lw	r3,12(r2)
	sw	12(r1),r3
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#16
L60:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r1),r2
	addi	r2,r0,#43
	sw	4(r1),r2
	jal	_dindex
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#0
	beqz	r2,L61
	nop	; delay slot nop
	add	r2,r0,r29
	jal	_GetCurrentPid
	nop	; delay slot nop
	add	r2,r0,r1
	addi	r29,r29,#-16
	add	r1,r0,r29
	lhi	r3,((LC9)>>16)&0xffff
	addui	r3,r3,(LC9)&0xffff
	sw	(r1),r3
	sw	4(r1),r2
	lw	r3,(r30)
	lhi	r4,((_sems)>>16)&0xffff
	addui	r4,r4,(_sems)&0xffff
	sub	r2,r3,r4
	lhi	r3,#-13108
	addui	r3,r3,#52429
	movi2fp	f0,r2
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	srai	r3,r2,#0x2
	sw	8(r1),r3
	lw	r2,(r30)
	lw	r3,12(r2)
	sw	12(r1),r3
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#16
L61:
	lw	r2,(r30)
	lw	r1,(r30)
	lw	r2,(r30)
	lw	r3,12(r2)
	addi	r2,r3,#1
	add	r3,r0,r2
	sw	12(r1),r3
	lw	r1,(r30)
	lw	r2,12(r1)
	sgti	r1,r2,#0
	beqz	r1,L62
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,(r30)
	sw	(r1),r2
	jal	_AQueueEmpty
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#0
	bnez	r2,L62
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,(r30)
	sw	(r1),r2
	jal	_AQueueFirst
	nop	; delay slot nop
	addi	r29,r29,#8
	sw	-12(r30),r1
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-12(r30)
	sw	(r1),r2
	jal	_AQueueObject
	nop	; delay slot nop
	addi	r29,r29,#8
	sw	-20(r30),r1
	addi	r29,r29,#-8
	add	r1,r0,r29
	addi	r2,r30,#-12
	sw	(r1),r2
	jal	_AQueueRemove
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#1
	beqz	r2,L64
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC10)>>16)&0xffff
	addui	r2,r2,(LC10)&0xffff
	sw	(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
	add	r2,r0,r29
	jal	_exitsim
	nop	; delay slot nop
L64:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r1),r2
	addi	r2,r0,#115
	sw	4(r1),r2
	jal	_dindex
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#0
	beqz	r2,L65
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-20(r30)
	sw	(r1),r2
	jal	_GetPidFromAddress
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r29,r29,#-8
	add	r2,r0,r29
	lhi	r3,((LC11)>>16)&0xffff
	addui	r3,r3,(LC11)&0xffff
	sw	(r2),r3
	sw	4(r2),r1
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
L65:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r1),r2
	addi	r2,r0,#43
	sw	4(r1),r2
	jal	_dindex
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#0
	beqz	r2,L66
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-20(r30)
	sw	(r1),r2
	jal	_GetPidFromAddress
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r29,r29,#-8
	add	r2,r0,r29
	lhi	r3,((LC11)>>16)&0xffff
	addui	r3,r3,(LC11)&0xffff
	sw	(r2),r3
	sw	4(r2),r1
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
L66:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-20(r30)
	sw	(r1),r2
	jal	_ProcessWakeup
	nop	; delay slot nop
	addi	r29,r29,#8
	lw	r2,(r30)
	lw	r1,(r30)
	lw	r2,(r30)
	lw	r3,12(r2)
	addi	r2,r3,#-1
	add	r3,r0,r2
	sw	12(r1),r3
L63:
L62:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-16(r30)
	sw	(r1),r2
	jal	_RestoreIntrs
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r1,r0,#1
	j	L58
	nop	; delay slot nop
L58:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _SemSignal
	.align 2
.proc _SemHandleSignal
.global _SemHandleSignal
_SemHandleSignal:
;  Function 'SemHandleSignal'; 0 bytes of locals, 4 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#24	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	lw	r1,(r30)
	slti	r2,r1,#0
	beqz	r2,L68
	nop	; delay slot nop
	addi	r1,r0,#-1
	j	L67
	nop	; delay slot nop
L68:
	lw	r1,(r30)
	sgti	r2,r1,#31
	beqz	r2,L69
	nop	; delay slot nop
	addi	r1,r0,#-1
	j	L67
	nop	; delay slot nop
L69:
	lw	r1,(r30)
	add	r3,r0,r1
	slli	r2,r3,#0x2
	add	r2,r2,r1
	slli	r1,r2,#0x2
	lhi	r5,((_sems)>>16)&0xffff
	addui	r5,r5,(_sems)&0xffff
	add	r2,r1,r5
	lw	r1,16(r2)
	snei	r2,r1,#0
	bnez	r2,L70
	nop	; delay slot nop
	addi	r1,r0,#-1
	j	L67
	nop	; delay slot nop
L70:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r2,r3,#0x2
	lhi	r3,((_sems)>>16)&0xffff
	addui	r3,r3,(_sems)&0xffff
	add	r2,r3,r2
	sw	(r1),r2
	jal	_SemSignal
	nop	; delay slot nop
	addi	r29,r29,#8
	add	r2,r0,r1
	add	r1,r0,r2
	j	L67
	nop	; delay slot nop
L67:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _SemHandleSignal
	.align 2
.proc _LockCreate
.global _LockCreate
_LockCreate:
;  Function 'LockCreate'; 8 bytes of locals, 4 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#32	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	add	r2,r0,r29
	jal	_DisableIntrs
	nop	; delay slot nop
	sw	-16(r30),r1
	addi	r1,r0,#0
	sw	-12(r30),r1
L72:
	lw	r1,-12(r30)
	slei	r2,r1,#63
	bnez	r2,L75
	nop	; delay slot nop
	j	L73
	nop	; delay slot nop
L75:
	lw	r1,-12(r30)
	add	r3,r0,r1
	slli	r2,r3,#0x2
	add	r2,r2,r1
	slli	r1,r2,#0x2
	lhi	r5,((_locks)>>16)&0xffff
	addui	r5,r5,(_locks)&0xffff
	add	r2,r1,r5
	lw	r1,16(r2)
	snei	r2,r1,#0
	bnez	r2,L74
	nop	; delay slot nop
	lhi	r1,((_locks)>>16)&0xffff
	addui	r1,r1,(_locks)&0xffff
	lw	r2,-12(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r2,r3,#0x2
	add	r1,r1,r2
	addi	r2,r0,#1
	sw	16(r1),r2
	j	L73
	nop	; delay slot nop
L76:
L74:
	lw	r2,-12(r30)
	addi	r1,r2,#1
	add	r2,r0,r1
	sw	-12(r30),r2
	j	L72
	nop	; delay slot nop
L73:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-16(r30)
	sw	(r1),r2
	jal	_RestoreIntrs
	nop	; delay slot nop
	addi	r29,r29,#8
	lw	r1,-12(r30)
	seqi	r2,r1,#64
	beqz	r2,L77
	nop	; delay slot nop
	addi	r1,r0,#-1
	j	L71
	nop	; delay slot nop
L77:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-12(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r2,r3,#0x2
	lhi	r3,((_locks)>>16)&0xffff
	addui	r3,r3,(_locks)&0xffff
	add	r2,r3,r2
	sw	(r1),r2
	jal	_LockInit
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#1
	beqz	r2,L78
	nop	; delay slot nop
	addi	r1,r0,#-1
	j	L71
	nop	; delay slot nop
L78:
	lw	r1,-12(r30)
	j	L71
	nop	; delay slot nop
L71:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _LockCreate
.data
	.align 2
LC12:
	.ascii "FATAL ERROR: could not initialize lock waiting queue in LockInit!\n\000"
.text
	.align 2
.proc _LockInit
.global _LockInit
_LockInit:
;  Function 'LockInit'; 0 bytes of locals, 2 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#16	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	lw	r1,(r30)
	snei	r2,r1,#0
	bnez	r2,L80
	nop	; delay slot nop
	addi	r1,r0,#-1
	j	L79
	nop	; delay slot nop
L80:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,(r30)
	addi	r3,r2,#4
	sw	(r1),r3
	jal	_AQueueInit
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#1
	beqz	r2,L81
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC12)>>16)&0xffff
	addui	r2,r2,(LC12)&0xffff
	sw	(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
	add	r2,r0,r29
	jal	_exitsim
	nop	; delay slot nop
L81:
	lw	r1,(r30)
	addi	r2,r0,#-1
	sw	(r1),r2
	addi	r1,r0,#1
	j	L79
	nop	; delay slot nop
L79:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _LockInit
.data
	.align 2
LC13:
	.ascii "LockAcquire: Old interrupt value was 0x%x.\n\000"
	.align 2
LC14:
	.ascii "LockAcquire: Proc %d already owns lock %d\n\000"
	.align 2
LC15:
	.ascii "LockAcquire: Proc %d asking for lock %d.\n\000"
	.align 2
LC16:
	.ascii "LockAcquire: putting process %d to sleep\n\000"
	.align 2
LC17:
	.ascii "FATAL ERROR: could not allocate link for lock queue in LockAcquire!\n\000"
	.align 2
LC18:
	.ascii "FATAL ERROR: could not insert new link into lock waiting queue in Lock"
	.ascii "Acquire!\n\000"
	.align 2
LC19:
	.ascii "LockAcquire: lock is available, assigning to proc %d\n\000"
.text
	.align 2
.proc _LockAcquire
.global _LockAcquire
_LockAcquire:
;  Function 'LockAcquire'; 8 bytes of locals, 3 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#32	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	lw	r1,(r30)
	snei	r2,r1,#0
	bnez	r2,L83
	nop	; delay slot nop
	addi	r1,r0,#-1
	j	L82
	nop	; delay slot nop
L83:
	add	r2,r0,r29
	jal	_DisableIntrs
	nop	; delay slot nop
	sw	-16(r30),r1
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r1),r2
	addi	r2,r0,#73
	sw	4(r1),r2
	jal	_dindex
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#0
	beqz	r2,L84
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC13)>>16)&0xffff
	addui	r2,r2,(LC13)&0xffff
	sw	(r1),r2
	lw	r2,-16(r30)
	sw	4(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
L84:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r1),r2
	addi	r2,r0,#43
	sw	4(r1),r2
	jal	_dindex
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#0
	beqz	r2,L85
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC13)>>16)&0xffff
	addui	r2,r2,(LC13)&0xffff
	sw	(r1),r2
	lw	r2,-16(r30)
	sw	4(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
L85:
	lw	r2,(r30)
	add	r3,r0,r29
	jal	_GetCurrentPid
	nop	; delay slot nop
	lw	r2,(r2)
	seq	r1,r2,r1
	beqz	r1,L86
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r1),r2
	addi	r2,r0,#115
	sw	4(r1),r2
	jal	_dindex
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#0
	beqz	r2,L87
	nop	; delay slot nop
	add	r2,r0,r29
	jal	_GetCurrentPid
	nop	; delay slot nop
	add	r2,r0,r1
	addi	r29,r29,#-16
	add	r1,r0,r29
	lhi	r3,((LC14)>>16)&0xffff
	addui	r3,r3,(LC14)&0xffff
	sw	(r1),r3
	sw	4(r1),r2
	lw	r3,(r30)
	lhi	r4,((_locks)>>16)&0xffff
	addui	r4,r4,(_locks)&0xffff
	sub	r2,r3,r4
	lhi	r3,#-13108
	addui	r3,r3,#52429
	movi2fp	f0,r2
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	srai	r3,r2,#0x2
	sw	8(r1),r3
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#16
L87:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r1),r2
	addi	r2,r0,#43
	sw	4(r1),r2
	jal	_dindex
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#0
	beqz	r2,L88
	nop	; delay slot nop
	add	r2,r0,r29
	jal	_GetCurrentPid
	nop	; delay slot nop
	add	r2,r0,r1
	addi	r29,r29,#-16
	add	r1,r0,r29
	lhi	r3,((LC14)>>16)&0xffff
	addui	r3,r3,(LC14)&0xffff
	sw	(r1),r3
	sw	4(r1),r2
	lw	r3,(r30)
	lhi	r4,((_locks)>>16)&0xffff
	addui	r4,r4,(_locks)&0xffff
	sub	r2,r3,r4
	lhi	r3,#-13108
	addui	r3,r3,#52429
	movi2fp	f0,r2
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	srai	r3,r2,#0x2
	sw	8(r1),r3
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#16
L88:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-16(r30)
	sw	(r1),r2
	jal	_RestoreIntrs
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r1,r0,#1
	j	L82
	nop	; delay slot nop
L86:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r1),r2
	addi	r2,r0,#115
	sw	4(r1),r2
	jal	_dindex
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#0
	beqz	r2,L89
	nop	; delay slot nop
	add	r2,r0,r29
	jal	_GetCurrentPid
	nop	; delay slot nop
	add	r2,r0,r1
	addi	r29,r29,#-16
	add	r1,r0,r29
	lhi	r3,((LC15)>>16)&0xffff
	addui	r3,r3,(LC15)&0xffff
	sw	(r1),r3
	sw	4(r1),r2
	lw	r3,(r30)
	lhi	r4,((_locks)>>16)&0xffff
	addui	r4,r4,(_locks)&0xffff
	sub	r2,r3,r4
	lhi	r3,#-13108
	addui	r3,r3,#52429
	movi2fp	f0,r2
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	srai	r3,r2,#0x2
	sw	8(r1),r3
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#16
L89:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r1),r2
	addi	r2,r0,#43
	sw	4(r1),r2
	jal	_dindex
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#0
	beqz	r2,L90
	nop	; delay slot nop
	add	r2,r0,r29
	jal	_GetCurrentPid
	nop	; delay slot nop
	add	r2,r0,r1
	addi	r29,r29,#-16
	add	r1,r0,r29
	lhi	r3,((LC15)>>16)&0xffff
	addui	r3,r3,(LC15)&0xffff
	sw	(r1),r3
	sw	4(r1),r2
	lw	r3,(r30)
	lhi	r4,((_locks)>>16)&0xffff
	addui	r4,r4,(_locks)&0xffff
	sub	r2,r3,r4
	lhi	r3,#-13108
	addui	r3,r3,#52429
	movi2fp	f0,r2
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	srai	r3,r2,#0x2
	sw	8(r1),r3
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#16
L90:
	lw	r1,(r30)
	lw	r2,(r1)
	sgei	r1,r2,#0
	beqz	r1,L91
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r1),r2
	addi	r2,r0,#115
	sw	4(r1),r2
	jal	_dindex
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#0
	beqz	r2,L92
	nop	; delay slot nop
	add	r2,r0,r29
	jal	_GetCurrentPid
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r2,r0,r29
	lhi	r3,((LC16)>>16)&0xffff
	addui	r3,r3,(LC16)&0xffff
	sw	(r2),r3
	sw	4(r2),r1
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
L92:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r1),r2
	addi	r2,r0,#43
	sw	4(r1),r2
	jal	_dindex
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#0
	beqz	r2,L93
	nop	; delay slot nop
	add	r2,r0,r29
	jal	_GetCurrentPid
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r2,r0,r29
	lhi	r3,((LC16)>>16)&0xffff
	addui	r3,r3,(LC16)&0xffff
	sw	(r2),r3
	sw	4(r2),r1
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
L93:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((_currentPCB)>>16)&0xffff
	addui	r2,r2,(_currentPCB)&0xffff
	lw	r3,(r2)
	sw	(r1),r3
	jal	_AQueueAllocLink
	nop	; delay slot nop
	addi	r29,r29,#8
	sw	-12(r30),r1
	lw	r1,-12(r30)
	snei	r2,r1,#0
	bnez	r2,L94
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC17)>>16)&0xffff
	addui	r2,r2,(LC17)&0xffff
	sw	(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
	add	r2,r0,r29
	jal	_exitsim
	nop	; delay slot nop
L94:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,(r30)
	addi	r3,r2,#4
	sw	(r1),r3
	lw	r2,-12(r30)
	sw	4(r1),r2
	jal	_AQueueInsertLast
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#1
	beqz	r2,L95
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC18)>>16)&0xffff
	addui	r2,r2,(LC18)&0xffff
	sw	(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
	add	r2,r0,r29
	jal	_exitsim
	nop	; delay slot nop
L95:
	add	r2,r0,r29
	jal	_ProcessSleep
	nop	; delay slot nop
	j	L96
	nop	; delay slot nop
L91:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r1),r2
	addi	r2,r0,#115
	sw	4(r1),r2
	jal	_dindex
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#0
	beqz	r2,L97
	nop	; delay slot nop
	add	r2,r0,r29
	jal	_GetCurrentPid
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r2,r0,r29
	lhi	r3,((LC19)>>16)&0xffff
	addui	r3,r3,(LC19)&0xffff
	sw	(r2),r3
	sw	4(r2),r1
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
L97:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r1),r2
	addi	r2,r0,#43
	sw	4(r1),r2
	jal	_dindex
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#0
	beqz	r2,L98
	nop	; delay slot nop
	add	r2,r0,r29
	jal	_GetCurrentPid
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r2,r0,r29
	lhi	r3,((LC19)>>16)&0xffff
	addui	r3,r3,(LC19)&0xffff
	sw	(r2),r3
	sw	4(r2),r1
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
L98:
	add	r2,r0,r29
	jal	_GetCurrentPid
	nop	; delay slot nop
	lw	r2,(r30)
	sw	(r2),r1
L96:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-16(r30)
	sw	(r1),r2
	jal	_RestoreIntrs
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r1,r0,#1
	j	L82
	nop	; delay slot nop
L82:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _LockAcquire
	.align 2
.proc _LockHandleAcquire
.global _LockHandleAcquire
_LockHandleAcquire:
;  Function 'LockHandleAcquire'; 0 bytes of locals, 4 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#24	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	lw	r1,(r30)
	slti	r2,r1,#0
	beqz	r2,L100
	nop	; delay slot nop
	addi	r1,r0,#-1
	j	L99
	nop	; delay slot nop
L100:
	lw	r1,(r30)
	sgti	r2,r1,#63
	beqz	r2,L101
	nop	; delay slot nop
	addi	r1,r0,#-1
	j	L99
	nop	; delay slot nop
L101:
	lw	r1,(r30)
	add	r3,r0,r1
	slli	r2,r3,#0x2
	add	r2,r2,r1
	slli	r1,r2,#0x2
	lhi	r5,((_locks)>>16)&0xffff
	addui	r5,r5,(_locks)&0xffff
	add	r2,r1,r5
	lw	r1,16(r2)
	snei	r2,r1,#0
	bnez	r2,L102
	nop	; delay slot nop
	addi	r1,r0,#-1
	j	L99
	nop	; delay slot nop
L102:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r2,r3,#0x2
	lhi	r3,((_locks)>>16)&0xffff
	addui	r3,r3,(_locks)&0xffff
	add	r2,r3,r2
	sw	(r1),r2
	jal	_LockAcquire
	nop	; delay slot nop
	addi	r29,r29,#8
	add	r2,r0,r1
	add	r1,r0,r2
	j	L99
	nop	; delay slot nop
L99:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _LockHandleAcquire
.data
	.align 2
LC20:
	.ascii "LockRelease: Proc %d releasing lock %d.\n\000"
	.align 2
LC21:
	.ascii "LockRelease: Proc %d does not own lock %d.\n\000"
	.align 2
LC22:
	.ascii "FATAL ERROR: could not remove link from lock queue in LockRelease!\n\000"
	.align 2
LC23:
	.ascii "LockRelease: Waking up PID %d, assigning lock.\n\000"
.text
	.align 2
.proc _LockRelease
.global _LockRelease
_LockRelease:
;  Function 'LockRelease'; 16 bytes of locals, 3 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#40	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	lw	r1,(r30)
	snei	r2,r1,#0
	bnez	r2,L104
	nop	; delay slot nop
	addi	r1,r0,#-1
	j	L103
	nop	; delay slot nop
L104:
	add	r2,r0,r29
	jal	_DisableIntrs
	nop	; delay slot nop
	sw	-16(r30),r1
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r1),r2
	addi	r2,r0,#115
	sw	4(r1),r2
	jal	_dindex
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#0
	beqz	r2,L105
	nop	; delay slot nop
	add	r2,r0,r29
	jal	_GetCurrentPid
	nop	; delay slot nop
	add	r2,r0,r1
	addi	r29,r29,#-16
	add	r1,r0,r29
	lhi	r3,((LC20)>>16)&0xffff
	addui	r3,r3,(LC20)&0xffff
	sw	(r1),r3
	sw	4(r1),r2
	lw	r3,(r30)
	lhi	r4,((_locks)>>16)&0xffff
	addui	r4,r4,(_locks)&0xffff
	sub	r2,r3,r4
	lhi	r3,#-13108
	addui	r3,r3,#52429
	movi2fp	f0,r2
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	srai	r3,r2,#0x2
	sw	8(r1),r3
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#16
L105:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r1),r2
	addi	r2,r0,#43
	sw	4(r1),r2
	jal	_dindex
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#0
	beqz	r2,L106
	nop	; delay slot nop
	add	r2,r0,r29
	jal	_GetCurrentPid
	nop	; delay slot nop
	add	r2,r0,r1
	addi	r29,r29,#-16
	add	r1,r0,r29
	lhi	r3,((LC20)>>16)&0xffff
	addui	r3,r3,(LC20)&0xffff
	sw	(r1),r3
	sw	4(r1),r2
	lw	r3,(r30)
	lhi	r4,((_locks)>>16)&0xffff
	addui	r4,r4,(_locks)&0xffff
	sub	r2,r3,r4
	lhi	r3,#-13108
	addui	r3,r3,#52429
	movi2fp	f0,r2
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	srai	r3,r2,#0x2
	sw	8(r1),r3
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#16
L106:
	lw	r2,(r30)
	add	r3,r0,r29
	jal	_GetCurrentPid
	nop	; delay slot nop
	lw	r2,(r2)
	sne	r1,r2,r1
	beqz	r1,L107
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r1),r2
	addi	r2,r0,#115
	sw	4(r1),r2
	jal	_dindex
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#0
	beqz	r2,L108
	nop	; delay slot nop
	add	r2,r0,r29
	jal	_GetCurrentPid
	nop	; delay slot nop
	add	r2,r0,r1
	addi	r29,r29,#-16
	add	r1,r0,r29
	lhi	r3,((LC21)>>16)&0xffff
	addui	r3,r3,(LC21)&0xffff
	sw	(r1),r3
	sw	4(r1),r2
	lw	r3,(r30)
	lhi	r4,((_locks)>>16)&0xffff
	addui	r4,r4,(_locks)&0xffff
	sub	r2,r3,r4
	lhi	r3,#-13108
	addui	r3,r3,#52429
	movi2fp	f0,r2
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	srai	r3,r2,#0x2
	sw	8(r1),r3
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#16
L108:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r1),r2
	addi	r2,r0,#43
	sw	4(r1),r2
	jal	_dindex
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#0
	beqz	r2,L109
	nop	; delay slot nop
	add	r2,r0,r29
	jal	_GetCurrentPid
	nop	; delay slot nop
	add	r2,r0,r1
	addi	r29,r29,#-16
	add	r1,r0,r29
	lhi	r3,((LC21)>>16)&0xffff
	addui	r3,r3,(LC21)&0xffff
	sw	(r1),r3
	sw	4(r1),r2
	lw	r3,(r30)
	lhi	r4,((_locks)>>16)&0xffff
	addui	r4,r4,(_locks)&0xffff
	sub	r2,r3,r4
	lhi	r3,#-13108
	addui	r3,r3,#52429
	movi2fp	f0,r2
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	srai	r3,r2,#0x2
	sw	8(r1),r3
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#16
L109:
	addi	r1,r0,#-1
	j	L103
	nop	; delay slot nop
L107:
	lw	r1,(r30)
	addi	r2,r0,#-1
	sw	(r1),r2
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,(r30)
	addi	r3,r2,#4
	sw	(r1),r3
	jal	_AQueueEmpty
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#0
	bnez	r2,L110
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,(r30)
	addi	r3,r2,#4
	sw	(r1),r3
	jal	_AQueueFirst
	nop	; delay slot nop
	addi	r29,r29,#8
	sw	-12(r30),r1
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-12(r30)
	sw	(r1),r2
	jal	_AQueueObject
	nop	; delay slot nop
	addi	r29,r29,#8
	sw	-20(r30),r1
	addi	r29,r29,#-8
	add	r1,r0,r29
	addi	r2,r30,#-12
	sw	(r1),r2
	jal	_AQueueRemove
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#1
	beqz	r2,L111
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC22)>>16)&0xffff
	addui	r2,r2,(LC22)&0xffff
	sw	(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
	add	r2,r0,r29
	jal	_exitsim
	nop	; delay slot nop
L111:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r1),r2
	addi	r2,r0,#115
	sw	4(r1),r2
	jal	_dindex
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#0
	beqz	r2,L112
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-20(r30)
	sw	(r1),r2
	jal	_GetPidFromAddress
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r29,r29,#-8
	add	r2,r0,r29
	lhi	r3,((LC23)>>16)&0xffff
	addui	r3,r3,(LC23)&0xffff
	sw	(r2),r3
	sw	4(r2),r1
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
L112:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r1),r2
	addi	r2,r0,#43
	sw	4(r1),r2
	jal	_dindex
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#0
	beqz	r2,L113
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-20(r30)
	sw	(r1),r2
	jal	_GetPidFromAddress
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r29,r29,#-8
	add	r2,r0,r29
	lhi	r3,((LC23)>>16)&0xffff
	addui	r3,r3,(LC23)&0xffff
	sw	(r2),r3
	sw	4(r2),r1
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
L113:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-20(r30)
	sw	(r1),r2
	jal	_GetPidFromAddress
	nop	; delay slot nop
	addi	r29,r29,#8
	lw	r2,(r30)
	sw	(r2),r1
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-20(r30)
	sw	(r1),r2
	jal	_ProcessWakeup
	nop	; delay slot nop
	addi	r29,r29,#8
L110:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-16(r30)
	sw	(r1),r2
	jal	_RestoreIntrs
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r1,r0,#1
	j	L103
	nop	; delay slot nop
L103:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _LockRelease
	.align 2
.proc _LockHandleRelease
.global _LockHandleRelease
_LockHandleRelease:
;  Function 'LockHandleRelease'; 0 bytes of locals, 4 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#24	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	lw	r1,(r30)
	slti	r2,r1,#0
	beqz	r2,L115
	nop	; delay slot nop
	addi	r1,r0,#-1
	j	L114
	nop	; delay slot nop
L115:
	lw	r1,(r30)
	sgti	r2,r1,#63
	beqz	r2,L116
	nop	; delay slot nop
	addi	r1,r0,#-1
	j	L114
	nop	; delay slot nop
L116:
	lw	r1,(r30)
	add	r3,r0,r1
	slli	r2,r3,#0x2
	add	r2,r2,r1
	slli	r1,r2,#0x2
	lhi	r5,((_locks)>>16)&0xffff
	addui	r5,r5,(_locks)&0xffff
	add	r2,r1,r5
	lw	r1,16(r2)
	snei	r2,r1,#0
	bnez	r2,L117
	nop	; delay slot nop
	addi	r1,r0,#-1
	j	L114
	nop	; delay slot nop
L117:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r2,r3,#0x2
	lhi	r3,((_locks)>>16)&0xffff
	addui	r3,r3,(_locks)&0xffff
	add	r2,r3,r2
	sw	(r1),r2
	jal	_LockRelease
	nop	; delay slot nop
	addi	r29,r29,#8
	add	r2,r0,r1
	add	r1,r0,r2
	j	L114
	nop	; delay slot nop
L114:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _LockHandleRelease
	.align 2
.proc _CondCreate
.global _CondCreate
_CondCreate:
;  Function 'CondCreate'; 8 bytes of locals, 4 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#32	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	lw	r1,(r30)
	slti	r2,r1,#0
	beqz	r2,L119
	nop	; delay slot nop
	addi	r1,r0,#-1
	j	L118
	nop	; delay slot nop
L119:
	add	r2,r0,r29
	jal	_DisableIntrs
	nop	; delay slot nop
	sw	-16(r30),r1
	addi	r1,r0,#0
	sw	-12(r30),r1
L120:
	lw	r1,-12(r30)
	slei	r2,r1,#63
	bnez	r2,L123
	nop	; delay slot nop
	j	L121
	nop	; delay slot nop
L123:
	lw	r1,-12(r30)
	add	r3,r0,r1
	slli	r2,r3,#0x2
	add	r2,r2,r1
	slli	r1,r2,#0x2
	lhi	r5,((_conds)>>16)&0xffff
	addui	r5,r5,(_conds)&0xffff
	add	r2,r1,r5
	lw	r1,16(r2)
	snei	r2,r1,#0
	bnez	r2,L122
	nop	; delay slot nop
	lhi	r1,((_conds)>>16)&0xffff
	addui	r1,r1,(_conds)&0xffff
	lw	r2,-12(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r2,r3,#0x2
	add	r1,r1,r2
	addi	r2,r0,#1
	sw	16(r1),r2
	j	L121
	nop	; delay slot nop
L124:
L122:
	lw	r2,-12(r30)
	addi	r1,r2,#1
	add	r2,r0,r1
	sw	-12(r30),r2
	j	L120
	nop	; delay slot nop
L121:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-16(r30)
	sw	(r1),r2
	jal	_RestoreIntrs
	nop	; delay slot nop
	addi	r29,r29,#8
	lw	r1,-12(r30)
	seqi	r2,r1,#32
	beqz	r2,L125
	nop	; delay slot nop
	addi	r1,r0,#-1
	j	L118
	nop	; delay slot nop
L125:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-12(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r2,r3,#0x2
	lhi	r3,((_conds)>>16)&0xffff
	addui	r3,r3,(_conds)&0xffff
	add	r2,r3,r2
	sw	(r1),r2
	jal	_CondInit
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#1
	beqz	r2,L126
	nop	; delay slot nop
	addi	r1,r0,#-1
	j	L118
	nop	; delay slot nop
L126:
	lhi	r1,((_conds)>>16)&0xffff
	addui	r1,r1,(_conds)&0xffff
	lw	r2,-12(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r2,r3,#0x2
	add	r1,r1,r2
	lw	r2,(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r2,r3,#0x2
	lhi	r3,((_locks)>>16)&0xffff
	addui	r3,r3,(_locks)&0xffff
	add	r2,r3,r2
	sw	(r1),r2
	lw	r1,-12(r30)
	j	L118
	nop	; delay slot nop
L118:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _CondCreate
.data
	.align 2
LC24:
	.ascii "FATAL ERROR: could not initialize lock waiting queue in CondInit!\n\000"
.text
	.align 2
.proc _CondInit
.global _CondInit
_CondInit:
;  Function 'CondInit'; 0 bytes of locals, 2 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#16	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	lw	r1,(r30)
	snei	r2,r1,#0
	bnez	r2,L128
	nop	; delay slot nop
	addi	r1,r0,#-1
	j	L127
	nop	; delay slot nop
L128:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,(r30)
	addi	r3,r2,#4
	sw	(r1),r3
	jal	_AQueueInit
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#1
	beqz	r2,L129
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC24)>>16)&0xffff
	addui	r2,r2,(LC24)&0xffff
	sw	(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
	add	r2,r0,r29
	jal	_exitsim
	nop	; delay slot nop
L129:
	addi	r1,r0,#1
	j	L127
	nop	; delay slot nop
L127:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _CondInit
.data
	.align 2
LC25:
	.ascii "CondWait: Old interrupt value was 0x%x.\n\000"
	.align 2
LC26:
	.ascii "CondWait: Proc %d does not own cond %d\n\000"
	.align 2
LC27:
	.ascii "CondWait: Proc %d waiting on cond %d.  Putting to sleep.\n\000"
	.align 2
LC28:
	.ascii "FATAL ERROR: could not allocate link for cond queue in CondWait!\n\000"
	.align 2
LC29:
	.ascii "FATAL ERROR: could not insert new link into cond waiting queue in Cond"
	.ascii "Wait!\n\000"
.text
	.align 2
.proc _CondWait
.global _CondWait
_CondWait:
;  Function 'CondWait'; 8 bytes of locals, 3 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#32	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	lw	r1,(r30)
	snei	r2,r1,#0
	bnez	r2,L131
	nop	; delay slot nop
	addi	r1,r0,#-1
	j	L130
	nop	; delay slot nop
L131:
	add	r2,r0,r29
	jal	_DisableIntrs
	nop	; delay slot nop
	sw	-16(r30),r1
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r1),r2
	addi	r2,r0,#73
	sw	4(r1),r2
	jal	_dindex
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#0
	beqz	r2,L132
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC25)>>16)&0xffff
	addui	r2,r2,(LC25)&0xffff
	sw	(r1),r2
	lw	r2,-16(r30)
	sw	4(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
L132:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r1),r2
	addi	r2,r0,#43
	sw	4(r1),r2
	jal	_dindex
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#0
	beqz	r2,L133
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC25)>>16)&0xffff
	addui	r2,r2,(LC25)&0xffff
	sw	(r1),r2
	lw	r2,-16(r30)
	sw	4(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
L133:
	lw	r1,(r30)
	lw	r2,(r1)
	add	r3,r0,r29
	jal	_GetCurrentPid
	nop	; delay slot nop
	lw	r2,(r2)
	sne	r1,r2,r1
	beqz	r1,L134
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r1),r2
	addi	r2,r0,#115
	sw	4(r1),r2
	jal	_dindex
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#0
	beqz	r2,L135
	nop	; delay slot nop
	add	r2,r0,r29
	jal	_GetCurrentPid
	nop	; delay slot nop
	add	r2,r0,r1
	addi	r29,r29,#-16
	add	r1,r0,r29
	lhi	r3,((LC26)>>16)&0xffff
	addui	r3,r3,(LC26)&0xffff
	sw	(r1),r3
	sw	4(r1),r2
	lw	r3,(r30)
	lhi	r4,((_conds)>>16)&0xffff
	addui	r4,r4,(_conds)&0xffff
	sub	r2,r3,r4
	lhi	r3,#-13108
	addui	r3,r3,#52429
	movi2fp	f0,r2
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	srai	r3,r2,#0x2
	sw	8(r1),r3
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#16
L135:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r1),r2
	addi	r2,r0,#43
	sw	4(r1),r2
	jal	_dindex
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#0
	beqz	r2,L136
	nop	; delay slot nop
	add	r2,r0,r29
	jal	_GetCurrentPid
	nop	; delay slot nop
	add	r2,r0,r1
	addi	r29,r29,#-16
	add	r1,r0,r29
	lhi	r3,((LC26)>>16)&0xffff
	addui	r3,r3,(LC26)&0xffff
	sw	(r1),r3
	sw	4(r1),r2
	lw	r3,(r30)
	lhi	r4,((_conds)>>16)&0xffff
	addui	r4,r4,(_conds)&0xffff
	sub	r2,r3,r4
	lhi	r3,#-13108
	addui	r3,r3,#52429
	movi2fp	f0,r2
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	srai	r3,r2,#0x2
	sw	8(r1),r3
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#16
L136:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-16(r30)
	sw	(r1),r2
	jal	_RestoreIntrs
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r1,r0,#-1
	j	L130
	nop	; delay slot nop
L134:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r1),r2
	addi	r2,r0,#115
	sw	4(r1),r2
	jal	_dindex
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#0
	beqz	r2,L137
	nop	; delay slot nop
	add	r2,r0,r29
	jal	_GetCurrentPid
	nop	; delay slot nop
	add	r2,r0,r1
	addi	r29,r29,#-16
	add	r1,r0,r29
	lhi	r3,((LC27)>>16)&0xffff
	addui	r3,r3,(LC27)&0xffff
	sw	(r1),r3
	sw	4(r1),r2
	lw	r3,(r30)
	lhi	r4,((_conds)>>16)&0xffff
	addui	r4,r4,(_conds)&0xffff
	sub	r2,r3,r4
	lhi	r3,#-13108
	addui	r3,r3,#52429
	movi2fp	f0,r2
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	srai	r3,r2,#0x2
	sw	8(r1),r3
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#16
L137:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r1),r2
	addi	r2,r0,#43
	sw	4(r1),r2
	jal	_dindex
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#0
	beqz	r2,L138
	nop	; delay slot nop
	add	r2,r0,r29
	jal	_GetCurrentPid
	nop	; delay slot nop
	add	r2,r0,r1
	addi	r29,r29,#-16
	add	r1,r0,r29
	lhi	r3,((LC27)>>16)&0xffff
	addui	r3,r3,(LC27)&0xffff
	sw	(r1),r3
	sw	4(r1),r2
	lw	r3,(r30)
	lhi	r4,((_conds)>>16)&0xffff
	addui	r4,r4,(_conds)&0xffff
	sub	r2,r3,r4
	lhi	r3,#-13108
	addui	r3,r3,#52429
	movi2fp	f0,r2
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	srai	r3,r2,#0x2
	sw	8(r1),r3
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#16
L138:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((_currentPCB)>>16)&0xffff
	addui	r2,r2,(_currentPCB)&0xffff
	lw	r3,(r2)
	sw	(r1),r3
	jal	_AQueueAllocLink
	nop	; delay slot nop
	addi	r29,r29,#8
	sw	-12(r30),r1
	lw	r1,-12(r30)
	snei	r2,r1,#0
	bnez	r2,L139
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC28)>>16)&0xffff
	addui	r2,r2,(LC28)&0xffff
	sw	(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
	add	r2,r0,r29
	jal	_exitsim
	nop	; delay slot nop
L139:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,(r30)
	addi	r3,r2,#4
	sw	(r1),r3
	lw	r2,-12(r30)
	sw	4(r1),r2
	jal	_AQueueInsertLast
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#1
	beqz	r2,L140
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC29)>>16)&0xffff
	addui	r2,r2,(LC29)&0xffff
	sw	(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
	add	r2,r0,r29
	jal	_exitsim
	nop	; delay slot nop
L140:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,(r30)
	lw	r3,(r2)
	sw	(r1),r3
	jal	_LockRelease
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-16(r30)
	sw	(r1),r2
	jal	_RestoreIntrs
	nop	; delay slot nop
	addi	r29,r29,#8
	add	r2,r0,r29
	jal	_ProcessSleep
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,(r30)
	lw	r3,(r2)
	sw	(r1),r3
	jal	_LockAcquire
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r1,r0,#1
	j	L130
	nop	; delay slot nop
L130:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _CondWait
	.align 2
.proc _CondHandleWait
.global _CondHandleWait
_CondHandleWait:
;  Function 'CondHandleWait'; 0 bytes of locals, 4 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#24	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	lw	r1,(r30)
	slti	r2,r1,#0
	beqz	r2,L142
	nop	; delay slot nop
	addi	r1,r0,#-1
	j	L141
	nop	; delay slot nop
L142:
	lw	r1,(r30)
	sgti	r2,r1,#31
	beqz	r2,L143
	nop	; delay slot nop
	addi	r1,r0,#-1
	j	L141
	nop	; delay slot nop
L143:
	lw	r1,(r30)
	add	r3,r0,r1
	slli	r2,r3,#0x2
	add	r2,r2,r1
	slli	r1,r2,#0x2
	lhi	r5,((_conds)>>16)&0xffff
	addui	r5,r5,(_conds)&0xffff
	add	r2,r1,r5
	lw	r1,16(r2)
	snei	r2,r1,#0
	bnez	r2,L144
	nop	; delay slot nop
	addi	r1,r0,#-1
	j	L141
	nop	; delay slot nop
L144:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r2,r3,#0x2
	lhi	r3,((_conds)>>16)&0xffff
	addui	r3,r3,(_conds)&0xffff
	add	r2,r3,r2
	sw	(r1),r2
	jal	_CondWait
	nop	; delay slot nop
	addi	r29,r29,#8
	add	r2,r0,r1
	add	r1,r0,r2
	j	L141
	nop	; delay slot nop
L141:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _CondHandleWait
.data
	.align 2
LC30:
	.ascii "CondSignal: Proc %d signalling cond %d.\n\000"
	.align 2
LC31:
	.ascii "CondSignal: Proc %d does not own cond %d.\n\000"
	.align 2
LC32:
	.ascii "FATAL ERROR: could not remove link from cond queue in CondSignal!\n\000"
	.align 2
LC33:
	.ascii "CondSignal: Waking up PID %d, it still needs to acquire lock.\n\000"
	.align 2
LC34:
	.ascii "CondSignal: Proc %d signalled, but no processes were waiting.\n\000"
.text
	.align 2
.proc _CondSignal
.global _CondSignal
_CondSignal:
;  Function 'CondSignal'; 16 bytes of locals, 3 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#40	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	lw	r1,(r30)
	snei	r2,r1,#0
	bnez	r2,L146
	nop	; delay slot nop
	addi	r1,r0,#-1
	j	L145
	nop	; delay slot nop
L146:
	add	r2,r0,r29
	jal	_DisableIntrs
	nop	; delay slot nop
	sw	-16(r30),r1
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r1),r2
	addi	r2,r0,#115
	sw	4(r1),r2
	jal	_dindex
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#0
	beqz	r2,L147
	nop	; delay slot nop
	add	r2,r0,r29
	jal	_GetCurrentPid
	nop	; delay slot nop
	add	r2,r0,r1
	addi	r29,r29,#-16
	add	r1,r0,r29
	lhi	r3,((LC30)>>16)&0xffff
	addui	r3,r3,(LC30)&0xffff
	sw	(r1),r3
	sw	4(r1),r2
	lw	r3,(r30)
	lhi	r4,((_conds)>>16)&0xffff
	addui	r4,r4,(_conds)&0xffff
	sub	r2,r3,r4
	lhi	r3,#-13108
	addui	r3,r3,#52429
	movi2fp	f0,r2
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	srai	r3,r2,#0x2
	sw	8(r1),r3
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#16
L147:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r1),r2
	addi	r2,r0,#43
	sw	4(r1),r2
	jal	_dindex
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#0
	beqz	r2,L148
	nop	; delay slot nop
	add	r2,r0,r29
	jal	_GetCurrentPid
	nop	; delay slot nop
	add	r2,r0,r1
	addi	r29,r29,#-16
	add	r1,r0,r29
	lhi	r3,((LC30)>>16)&0xffff
	addui	r3,r3,(LC30)&0xffff
	sw	(r1),r3
	sw	4(r1),r2
	lw	r3,(r30)
	lhi	r4,((_conds)>>16)&0xffff
	addui	r4,r4,(_conds)&0xffff
	sub	r2,r3,r4
	lhi	r3,#-13108
	addui	r3,r3,#52429
	movi2fp	f0,r2
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	srai	r3,r2,#0x2
	sw	8(r1),r3
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#16
L148:
	lw	r1,(r30)
	lw	r2,(r1)
	add	r3,r0,r29
	jal	_GetCurrentPid
	nop	; delay slot nop
	lw	r2,(r2)
	sne	r1,r2,r1
	beqz	r1,L149
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r1),r2
	addi	r2,r0,#115
	sw	4(r1),r2
	jal	_dindex
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#0
	beqz	r2,L150
	nop	; delay slot nop
	add	r2,r0,r29
	jal	_GetCurrentPid
	nop	; delay slot nop
	add	r2,r0,r1
	addi	r29,r29,#-16
	add	r1,r0,r29
	lhi	r3,((LC31)>>16)&0xffff
	addui	r3,r3,(LC31)&0xffff
	sw	(r1),r3
	sw	4(r1),r2
	lw	r3,(r30)
	lhi	r4,((_conds)>>16)&0xffff
	addui	r4,r4,(_conds)&0xffff
	sub	r2,r3,r4
	lhi	r3,#-13108
	addui	r3,r3,#52429
	movi2fp	f0,r2
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	srai	r3,r2,#0x2
	sw	8(r1),r3
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#16
L150:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r1),r2
	addi	r2,r0,#43
	sw	4(r1),r2
	jal	_dindex
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#0
	beqz	r2,L151
	nop	; delay slot nop
	add	r2,r0,r29
	jal	_GetCurrentPid
	nop	; delay slot nop
	add	r2,r0,r1
	addi	r29,r29,#-16
	add	r1,r0,r29
	lhi	r3,((LC31)>>16)&0xffff
	addui	r3,r3,(LC31)&0xffff
	sw	(r1),r3
	sw	4(r1),r2
	lw	r3,(r30)
	lhi	r4,((_conds)>>16)&0xffff
	addui	r4,r4,(_conds)&0xffff
	sub	r2,r3,r4
	lhi	r3,#-13108
	addui	r3,r3,#52429
	movi2fp	f0,r2
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	srai	r3,r2,#0x2
	sw	8(r1),r3
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#16
L151:
	addi	r1,r0,#-1
	j	L145
	nop	; delay slot nop
L149:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,(r30)
	addi	r3,r2,#4
	sw	(r1),r3
	jal	_AQueueEmpty
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#0
	bnez	r2,L152
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,(r30)
	addi	r3,r2,#4
	sw	(r1),r3
	jal	_AQueueFirst
	nop	; delay slot nop
	addi	r29,r29,#8
	sw	-12(r30),r1
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-12(r30)
	sw	(r1),r2
	jal	_AQueueObject
	nop	; delay slot nop
	addi	r29,r29,#8
	sw	-20(r30),r1
	addi	r29,r29,#-8
	add	r1,r0,r29
	addi	r2,r30,#-12
	sw	(r1),r2
	jal	_AQueueRemove
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#1
	beqz	r2,L153
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC32)>>16)&0xffff
	addui	r2,r2,(LC32)&0xffff
	sw	(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
	add	r2,r0,r29
	jal	_exitsim
	nop	; delay slot nop
L153:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r1),r2
	addi	r2,r0,#115
	sw	4(r1),r2
	jal	_dindex
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#0
	beqz	r2,L154
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-20(r30)
	sw	(r1),r2
	jal	_GetPidFromAddress
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r29,r29,#-8
	add	r2,r0,r29
	lhi	r3,((LC33)>>16)&0xffff
	addui	r3,r3,(LC33)&0xffff
	sw	(r2),r3
	sw	4(r2),r1
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
L154:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r1),r2
	addi	r2,r0,#43
	sw	4(r1),r2
	jal	_dindex
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#0
	beqz	r2,L155
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-20(r30)
	sw	(r1),r2
	jal	_GetPidFromAddress
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r29,r29,#-8
	add	r2,r0,r29
	lhi	r3,((LC33)>>16)&0xffff
	addui	r3,r3,(LC33)&0xffff
	sw	(r2),r3
	sw	4(r2),r1
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
L155:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-20(r30)
	sw	(r1),r2
	jal	_ProcessWakeup
	nop	; delay slot nop
	addi	r29,r29,#8
	j	L156
	nop	; delay slot nop
L152:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r1),r2
	addi	r2,r0,#115
	sw	4(r1),r2
	jal	_dindex
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#0
	beqz	r2,L157
	nop	; delay slot nop
	add	r2,r0,r29
	jal	_GetCurrentPid
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r2,r0,r29
	lhi	r3,((LC34)>>16)&0xffff
	addui	r3,r3,(LC34)&0xffff
	sw	(r2),r3
	sw	4(r2),r1
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
L157:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r1),r2
	addi	r2,r0,#43
	sw	4(r1),r2
	jal	_dindex
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#0
	beqz	r2,L156
	nop	; delay slot nop
	add	r2,r0,r29
	jal	_GetCurrentPid
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r2,r0,r29
	lhi	r3,((LC34)>>16)&0xffff
	addui	r3,r3,(LC34)&0xffff
	sw	(r2),r3
	sw	4(r2),r1
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
L158:
L156:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-16(r30)
	sw	(r1),r2
	jal	_RestoreIntrs
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r1,r0,#1
	j	L145
	nop	; delay slot nop
L145:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _CondSignal
	.align 2
.proc _CondHandleSignal
.global _CondHandleSignal
_CondHandleSignal:
;  Function 'CondHandleSignal'; 0 bytes of locals, 4 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#24	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	lw	r1,(r30)
	slti	r2,r1,#0
	beqz	r2,L160
	nop	; delay slot nop
	addi	r1,r0,#-1
	j	L159
	nop	; delay slot nop
L160:
	lw	r1,(r30)
	sgti	r2,r1,#31
	beqz	r2,L161
	nop	; delay slot nop
	addi	r1,r0,#-1
	j	L159
	nop	; delay slot nop
L161:
	lw	r1,(r30)
	add	r3,r0,r1
	slli	r2,r3,#0x2
	add	r2,r2,r1
	slli	r1,r2,#0x2
	lhi	r5,((_conds)>>16)&0xffff
	addui	r5,r5,(_conds)&0xffff
	add	r2,r1,r5
	lw	r1,16(r2)
	snei	r2,r1,#0
	bnez	r2,L162
	nop	; delay slot nop
	addi	r1,r0,#-1
	j	L159
	nop	; delay slot nop
L162:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r2,r3,#0x2
	lhi	r3,((_conds)>>16)&0xffff
	addui	r3,r3,(_conds)&0xffff
	add	r2,r3,r2
	sw	(r1),r2
	jal	_CondSignal
	nop	; delay slot nop
	addi	r29,r29,#8
	add	r2,r0,r1
	add	r1,r0,r2
	j	L159
	nop	; delay slot nop
L159:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _CondHandleSignal
.data
	.align 2
LC35:
	.ascii "CondBroadcast: Proc %d tried to broadcast, but it doesn\'t own cond %d"
	.ascii "\n\000"
	.align 2
LC36:
	.ascii "CondBroadcast: Proc %d failed in signalling cond %d\n\000"
	.align 2
LC37:
	.ascii "CondBroadcast: Proc %d successful broadcast on cond %d, still needs to"
	.ascii " release lock\n\000"
.text
	.align 2
.proc _CondBroadcast
.global _CondBroadcast
_CondBroadcast:
;  Function 'CondBroadcast'; 0 bytes of locals, 3 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#24	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	lw	r1,(r30)
	snei	r2,r1,#0
	bnez	r2,L164
	nop	; delay slot nop
	addi	r1,r0,#-1
	j	L163
	nop	; delay slot nop
L164:
	lw	r1,(r30)
	lw	r2,(r1)
	add	r3,r0,r29
	jal	_GetCurrentPid
	nop	; delay slot nop
	lw	r2,(r2)
	sne	r1,r2,r1
	beqz	r1,L165
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r1),r2
	addi	r2,r0,#115
	sw	4(r1),r2
	jal	_dindex
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#0
	beqz	r2,L166
	nop	; delay slot nop
	add	r2,r0,r29
	jal	_GetCurrentPid
	nop	; delay slot nop
	add	r2,r0,r1
	addi	r29,r29,#-16
	add	r1,r0,r29
	lhi	r3,((LC35)>>16)&0xffff
	addui	r3,r3,(LC35)&0xffff
	sw	(r1),r3
	sw	4(r1),r2
	lw	r3,(r30)
	lhi	r4,((_conds)>>16)&0xffff
	addui	r4,r4,(_conds)&0xffff
	sub	r2,r3,r4
	lhi	r3,#-13108
	addui	r3,r3,#52429
	movi2fp	f0,r2
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	srai	r3,r2,#0x2
	sw	8(r1),r3
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#16
L166:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r1),r2
	addi	r2,r0,#43
	sw	4(r1),r2
	jal	_dindex
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#0
	beqz	r2,L167
	nop	; delay slot nop
	add	r2,r0,r29
	jal	_GetCurrentPid
	nop	; delay slot nop
	add	r2,r0,r1
	addi	r29,r29,#-16
	add	r1,r0,r29
	lhi	r3,((LC35)>>16)&0xffff
	addui	r3,r3,(LC35)&0xffff
	sw	(r1),r3
	sw	4(r1),r2
	lw	r3,(r30)
	lhi	r4,((_conds)>>16)&0xffff
	addui	r4,r4,(_conds)&0xffff
	sub	r2,r3,r4
	lhi	r3,#-13108
	addui	r3,r3,#52429
	movi2fp	f0,r2
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	srai	r3,r2,#0x2
	sw	8(r1),r3
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#16
L167:
	addi	r1,r0,#-1
	j	L163
	nop	; delay slot nop
L165:
	nop
L168:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,(r30)
	addi	r3,r2,#4
	sw	(r1),r3
	jal	_AQueueEmpty
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#0
	beqz	r2,L170
	nop	; delay slot nop
	j	L169
	nop	; delay slot nop
L170:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,(r30)
	sw	(r1),r2
	jal	_CondSignal
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#1
	beqz	r2,L171
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r1),r2
	addi	r2,r0,#115
	sw	4(r1),r2
	jal	_dindex
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#0
	beqz	r2,L172
	nop	; delay slot nop
	add	r2,r0,r29
	jal	_GetCurrentPid
	nop	; delay slot nop
	add	r2,r0,r1
	addi	r29,r29,#-16
	add	r1,r0,r29
	lhi	r3,((LC36)>>16)&0xffff
	addui	r3,r3,(LC36)&0xffff
	sw	(r1),r3
	sw	4(r1),r2
	lw	r3,(r30)
	lhi	r4,((_conds)>>16)&0xffff
	addui	r4,r4,(_conds)&0xffff
	sub	r2,r3,r4
	lhi	r3,#-13108
	addui	r3,r3,#52429
	movi2fp	f0,r2
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	srai	r3,r2,#0x2
	sw	8(r1),r3
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#16
L172:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r1),r2
	addi	r2,r0,#43
	sw	4(r1),r2
	jal	_dindex
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#0
	beqz	r2,L173
	nop	; delay slot nop
	add	r2,r0,r29
	jal	_GetCurrentPid
	nop	; delay slot nop
	add	r2,r0,r1
	addi	r29,r29,#-16
	add	r1,r0,r29
	lhi	r3,((LC36)>>16)&0xffff
	addui	r3,r3,(LC36)&0xffff
	sw	(r1),r3
	sw	4(r1),r2
	lw	r3,(r30)
	lhi	r4,((_conds)>>16)&0xffff
	addui	r4,r4,(_conds)&0xffff
	sub	r2,r3,r4
	lhi	r3,#-13108
	addui	r3,r3,#52429
	movi2fp	f0,r2
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	srai	r3,r2,#0x2
	sw	8(r1),r3
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#16
L173:
	addi	r1,r0,#-1
	j	L163
	nop	; delay slot nop
L171:
	j	L168
	nop	; delay slot nop
L169:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r1),r2
	addi	r2,r0,#115
	sw	4(r1),r2
	jal	_dindex
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#0
	beqz	r2,L174
	nop	; delay slot nop
	add	r2,r0,r29
	jal	_GetCurrentPid
	nop	; delay slot nop
	add	r2,r0,r1
	addi	r29,r29,#-16
	add	r1,r0,r29
	lhi	r3,((LC37)>>16)&0xffff
	addui	r3,r3,(LC37)&0xffff
	sw	(r1),r3
	sw	4(r1),r2
	lw	r3,(r30)
	lhi	r4,((_conds)>>16)&0xffff
	addui	r4,r4,(_conds)&0xffff
	sub	r2,r3,r4
	lhi	r3,#-13108
	addui	r3,r3,#52429
	movi2fp	f0,r2
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	srai	r3,r2,#0x2
	sw	8(r1),r3
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#16
L174:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r1),r2
	addi	r2,r0,#43
	sw	4(r1),r2
	jal	_dindex
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#0
	beqz	r2,L175
	nop	; delay slot nop
	add	r2,r0,r29
	jal	_GetCurrentPid
	nop	; delay slot nop
	add	r2,r0,r1
	addi	r29,r29,#-16
	add	r1,r0,r29
	lhi	r3,((LC37)>>16)&0xffff
	addui	r3,r3,(LC37)&0xffff
	sw	(r1),r3
	sw	4(r1),r2
	lw	r3,(r30)
	lhi	r4,((_conds)>>16)&0xffff
	addui	r4,r4,(_conds)&0xffff
	sub	r2,r3,r4
	lhi	r3,#-13108
	addui	r3,r3,#52429
	movi2fp	f0,r2
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	srai	r3,r2,#0x2
	sw	8(r1),r3
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#16
L175:
	addi	r1,r0,#1
	j	L163
	nop	; delay slot nop
L163:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _CondBroadcast
	.align 2
.proc _CondHandleBroadcast
.global _CondHandleBroadcast
_CondHandleBroadcast:
;  Function 'CondHandleBroadcast'; 0 bytes of locals, 4 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#24	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	lw	r1,(r30)
	slti	r2,r1,#0
	beqz	r2,L177
	nop	; delay slot nop
	addi	r1,r0,#-1
	j	L176
	nop	; delay slot nop
L177:
	lw	r1,(r30)
	sgti	r2,r1,#31
	beqz	r2,L178
	nop	; delay slot nop
	addi	r1,r0,#-1
	j	L176
	nop	; delay slot nop
L178:
	lw	r1,(r30)
	add	r3,r0,r1
	slli	r2,r3,#0x2
	add	r2,r2,r1
	slli	r1,r2,#0x2
	lhi	r5,((_conds)>>16)&0xffff
	addui	r5,r5,(_conds)&0xffff
	add	r2,r1,r5
	lw	r1,16(r2)
	snei	r2,r1,#0
	bnez	r2,L179
	nop	; delay slot nop
	addi	r1,r0,#-1
	j	L176
	nop	; delay slot nop
L179:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r2,r3,#0x2
	lhi	r3,((_conds)>>16)&0xffff
	addui	r3,r3,(_conds)&0xffff
	add	r2,r3,r2
	sw	(r1),r2
	jal	_CondSignal
	nop	; delay slot nop
	addi	r29,r29,#8
	add	r2,r0,r1
	add	r1,r0,r2
	j	L176
	nop	; delay slot nop
L176:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _CondHandleBroadcast
.data
	.align 2
_sems:
	.space 640
	.align 2
_locks:
	.space 1280
	.align 2
_conds:
	.space 1280
